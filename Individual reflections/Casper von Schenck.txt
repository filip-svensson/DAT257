Week 1

I would want to understand how a coding team work
and gain experience for future work. As of now I've never worked in such a team.

I hope to be able to contribute with own strengths
as I've worked a lot in groups and can help in meetings.

I think I can help get this done since im very keen to learn
and find out what needs to be done even though I'm quite a rookie in coding.

----------------------------------------------------------------------------------------------------
Week 2

I want to understand how HTML-code is built and how webpages work in depth.
Since we have a few that knows from previous work how to build a webpage, I'll be the one learning
a lot, but I'll do my best trying to find things that even the experienced have a hard time finding.

In Scrum I can help with a lot of the administrative work, getting the ones who know the work to
give out a proper amount of work. My contribution is still to be planned this week.

----------------------------------------------------------------------------------------------------
Week 3

I more precisely want to learn how to get up buttons, and how to properly position elements in the
properties. I can help my team by learning, looking up youtube videos and tutorials.
Scrum this week is going to be comprised of thinking up user stories and dividing into smaller more
effective groups.

My contribution on deliveries is going to be mostly design of the webpage.

----------------------------------------------------------------------------------------------------
Week 4
I want to understand APIs better, what they are, how they work and how to use them.
This week I sadly don't see how I can help someone else learn very much, but I'll
try and find as much information as I can. The rest I'll learn from my scrumpartners.

I feel that I can't help more to scrum than I already do, but I'll make sure to keep it up.

----------------------------------------------------------------------------------------------------
Week 5
This week I combined my previous sprints of learning APIs with typeScript which I intend
to understand better this week. This week I can help more in helping the team learn.

Delivery of info displayed on the map, aswell as getting the correct info from the API.
I help scrum as usual, by contributing with input in the meeting, taking on user stories
and helping merge.

----------------------------------------------------------------------------------------------------
Week 6
Understanding how to add things such as text and boxes in different parts of the webpage.
Places like the footer and nav. Trying out things with containers in html, and making custom CSS IDs.

I help by putting in the time learning the APIs and teaching events in the ts-code.

All in all I'll keep working to understand the new languages, but "Scrum-wise" I feel like I have a better grasp
in the way we can work now. The planning, the detail and deadlines accompanied by weekly critique makes for a good
development. To keep working with Scrum I'll try to fledge out the user stories this week.

----------------------------------------------------------------------------------------------------
Week 7 / Week 8
This sprint was for me and the work I took on, not very large or demanding. I feel that I could have valued the tasks
I chose much higher. Although we all chose to not make the user stories very hard this week seeing as we felt that MVP had
been reached and didn't want to accidentally break the code.

This week we kept working a lot on design for this week, meeting up with our PO and such.

In the end I feel very satisfied with the outcome and how we performed as a team.

Seeing as there was no sprint after the presentation I won't do another individual reflection for week 8. But to summarize
I think the application of scrum could be useful as long as it doesn't waste more time setting up than fixing the problems
that arise. My group and I did a good amount, and I rarely felt as any of it was a time waste.

We could definitely have had a PO much earlier, and a better vision of our project from the start. I think we might've
underestimated our abilities to learn programming languages on our own, and maybe could've aimed higher in quality.